#define ENB 11
#define ENA 10

int speedMotorA = 55;                       //Declarar variables para asignar velocidad del motor.  
int speedMotorB = 65;

int PinIN1 = 2;                             //Declarar variables para asignar pines del motor. 
int PinIN2 = 3;
int PinIN3 = 4;
int PinIN4 = 5; 

int Pin_sensor1 = 8;                        //Declarar pin para recibir señales del sensor IR (izquierdo).
int Pin_sensor2 = 9;                        //Declarar pin para recibir señales del sensor IR (derecho).

int value1 = 0;                             // Variable temporal que usaremos para recoger la señal del sensor izquierdo.
int value2 = 0;                             // Variable temporal que usaremos para recoger la señal del sensor derecho.

int tiempo = 20;                            //Variable tiempo como control de "antirebote"
void setup() {
  pinMode(PinIN1, OUTPUT);                   //Asignación de pines de motor como salidas.
  pinMode(PinIN2, OUTPUT);                   
  pinMode(PinIN3, OUTPUT);
  pinMode(PinIN4, OUTPUT);
  pinMode(Pin_sensor1, INPUT);                //Asignación de pines de IR (infrarojo) como entrada para el sensor izquierdo.
  pinMode(Pin_sensor2, INPUT);                //Asignación de pines de IR (infrarojo) como entrada para el sensor derecho.

  analogWrite(ENA, speedMotorA);              //Enviar valor con la velocidad de motor en pines analogicos 
  analogWrite(ENB, speedMotorB);

  Serial.begin(9600);                         //Iniciar comunicación serial para realizar pruebas.
}

void loop() {
  value1 = digitalRead(Pin_sensor1);          // lectura digital de pin del sensor1
  value2 = digitalRead(Pin_sensor2);          // lectura digital de pin del sensor2
  delay(tiempo);

  if (value1 == LOW && value2 == LOW) 
  {
    MotorAdelante();    
    Serial.println("adelante");
  }
  
  if (value1 == HIGH && value2 == HIGH) 
  {
    MotorStop(); 
    Serial.println("detenido");
  }
 
  if (value1 == HIGH && value2 == LOW){                 // Si el sensor izquierdo detecta una zona oscura  
      MotorIzquierda();
      Serial.println("izquierda");
  } 
    
  if (value2 == HIGH && value1 == LOW)                  // Si el sensor derecho detecta una zona oscura  
    {
      MotorDerecha();
      Serial.println("derecha"); 
    }
  //delay(tiempo);                                      // Hacemos una pausa en milisegundos, de forma que leemos el sensor cada dicho tiempo
}
  void MotorIzquierda(){
  digitalWrite (PinIN1, HIGH);            // Motor Izquierdo atras
  digitalWrite (PinIN2, LOW);  
  digitalWrite (PinIN3, HIGH);            // Motor Derecho adelante
  digitalWrite (PinIN4, LOW); 
  delay(tiempo);
  }

  void MotorDerecha(){
  digitalWrite (PinIN1, LOW);             // Motor Izquierdo adelante
  digitalWrite (PinIN2, HIGH);  
  digitalWrite (PinIN3, LOW);             // Motor Derecho atras
  digitalWrite (PinIN4, HIGH);
  delay(tiempo);
  }

  void MotorAdelante(){
  digitalWrite (PinIN1, HIGH);             // Motor Izquierdo adelante
  digitalWrite (PinIN2, LOW); 
  digitalWrite (PinIN3, LOW);             // Motor Derecho adelante
  digitalWrite (PinIN4, HIGH); 
  delay(tiempo);
  }

  void MotorStop(){
  digitalWrite (PinIN1, LOW);             // Motor Izquierdo detenido
  digitalWrite (PinIN2, LOW);
  digitalWrite (PinIN3, LOW);             // Motor Derecho detenido 
  digitalWrite (PinIN4, LOW);
  delay(tiempo);
  }
