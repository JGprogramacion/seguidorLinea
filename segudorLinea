#define ENB 11
#define ENA 10
int speedMotorA = 55;
int speedMotorB = 65;
// *** DECLARAMOS LAS VARIABLES QUE VAMOS A UTILIZAR   ***
static int PinIN1 = 2;
static int PinIN2 = 3;
static int PinIN3 = 4;
static int PinIN4 = 5; 
static int Pin_sensor1 = 8;                       // Con este pin recogemos las se単ales del sensor
static int Pin_sensor2 = 9;                       // Con este pin recogemos las se単ales del sensor

void setup() {
  Serial.begin(9600);                             //iniciamos las comunicaciones con el puerto serie para el monitor serie
  pinMode(PinIN1, OUTPUT);
  pinMode(PinIN2, OUTPUT);
  pinMode(PinIN3, OUTPUT);
  pinMode(PinIN4, OUTPUT);
  pinMode(Pin_sensor1, INPUT);                    //definimos el pin que vamos a utilizar como entrada para el sensor izquierdo
  pinMode(Pin_sensor2, INPUT);                    //definimos el pin que vamos a utilizar como entrada para el sensor derecho

  analogWrite(ENA, speedMotorA);
  analogWrite(ENB, speedMotorB);
}

void loop() {
  
  int value1 = 0;                        // Variable temporal que usaremos para recoger la se単al del sensor izquierdo
  int value2 = 0;                        // Variable temporal que usaremos para recoger la se単al del sensor derecho
  value1 = digitalRead(Pin_sensor1);     // lectura digital de pin del sensor1
  value2 = digitalRead(Pin_sensor2);     // lectura digital de pin del sensor2

  if (value1 == LOW && value2 == LOW) 
  {
    Serial.println("adelante");
    MotorAdelante();    
  }
  
  if (value1 == HIGH && value2 == HIGH) 
  {
    Serial.println("detenido");
    MotorStop();    
  }
 
   if (value1 == HIGH && value2 == LOW) // Si el sensor izuierdo detecta una zona oscura    
    {
     Serial.println("izquierda");
     MotorIzquierda();
    } 
    
   if (value2 == HIGH && value1 == LOW) // Si el sensor derecho detecta una zona oscura  
    { 
     Serial.println("derecha"); 
     MotorDerecha();
    }
 
  delay(20);                             // Hacemos una pausa en milisegundos, de forma que leemos el sensor cada dicho tiempo
}
  
  void MotorIzquierda()
  {
  digitalWrite (PinIN1, HIGH);            // Motor Izquierdo atras
  digitalWrite (PinIN2, LOW);  
  digitalWrite (PinIN3, HIGH);            // Motor Derecho adelante
  digitalWrite (PinIN4, LOW); 
  }

  void MotorDerecha()
  {
  digitalWrite (PinIN1, LOW);             // Motor Izquierdo adelante
  digitalWrite (PinIN2, HIGH);  
  digitalWrite (PinIN3, LOW);             // Motor Derecho atras
  digitalWrite (PinIN4, HIGH);
  }

  void MotorAdelante()
  {
  digitalWrite (PinIN1, HIGH);             // Motor Izquierdo adelante
  digitalWrite (PinIN2, LOW); 
  digitalWrite (PinIN3, LOW);            // Motor Derecho adelante
  digitalWrite (PinIN4, HIGH); 
  }

  void MotorStop()
  {
  digitalWrite (PinIN1, LOW);             // Motor Izquierdo detenido
  digitalWrite (PinIN2, LOW);
  digitalWrite (PinIN3, LOW);             // Motor Derecho detenido 
  digitalWrite (PinIN4, LOW);
  
  }
